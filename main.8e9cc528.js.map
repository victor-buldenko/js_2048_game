{"version":3,"sources":["scripts/main.js"],"names":["field","document","querySelector","firstElementChild","cellList","querySelectorAll","startButton","score","rows","reduce","res","el","index","children","forEach","item","push","cols","game","e","key","move","addNewNumber","cellClassHandler","arr","direction","clear","getClearArray","i","length","filter","innerText","pop","ind","shift","showMessage","findEmptyCell","result","cell","randomCell","max","Math","floor","random","array","emptyCells","position","number","error","removeEventListener","classList","remove","add","start","type","allMsg","msg","addEventListener","toggle"],"mappings":"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","file":"main.8e9cc528.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst field = document.querySelector('.game-field').firstElementChild;\nconst cellList = document.querySelectorAll('TD');\nconst startButton = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst rows = [...field.rows].reduce((res, el, index) => {\n  if (!res[index]) {\n    res[index] = [];\n  };\n\n  [...el.children].forEach((item) => {\n    res[index].push(item);\n  });\n\n  return res;\n}, []);\nconst cols = [...field.rows].reduce((res, el) => {\n  [...el.children].forEach((item, index) => {\n    if (!res[index]) {\n      res[index] = [];\n    };\n\n    res[index].push(item);\n  });\n\n  return res;\n}, []);\n\nstartButton.addEventListener('click', e => {\n  if (!startButton.toggle) {\n    document.addEventListener('keydown', game);\n    showMessage();\n    start();\n    startButton.innerText = 'Restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.toggle = !startButton.toggle;\n  } else {\n    document.removeEventListener('keydown', game);\n    document.addEventListener('keydown', game);\n    score.innerText = 0;\n    cellList.forEach(el => (el.innerText = ''));\n    start();\n    showMessage();\n  }\n});\n\nfunction game(e) {\n  if (e.key === 'ArrowRight' || e.key === 'ArrowLeft') {\n    move(rows, e.key);\n  };\n\n  if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n    move(cols, e.key);\n  };\n\n  addNewNumber(rows);\n  cellClassHandler();\n}\n\nfunction move(arr, direction) {\n  arr.forEach(el => {\n    let clear = getClearArray(el);\n\n    for (let i = clear.length; i > 0; i--) {\n      if (clear[i - 1] && clear[i] === clear[i - 1]) {\n        clear[i] = +clear[i] + +clear[i - 1];\n        clear[i - 1] = '';\n      };\n    }\n\n    clear = clear.filter(item => {\n      if (item) {\n        return item;\n      }\n    });\n\n    switch (direction) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        for (let index = el.length - 1; index >= 0; index--) {\n          clear.length\n            ? el[index].innerText = clear.pop()\n            : el[index].innerText = '';\n        }\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        for (let ind = 0; ind < el.length; ind++) {\n          clear.length\n            ? el[ind].innerText = clear.shift()\n            : el[ind].innerText = '';\n        }\n        break;\n    }\n  });\n\n  cellClassHandler();\n\n  cellList.forEach(el => {\n    if (+el.innerText === 2048) {\n      showMessage('win');\n    }\n  });\n};\n\nfunction findEmptyCell(arr) {\n  const result = [];\n\n  arr.forEach(el => {\n    el.forEach(cell => {\n      if (!cell.innerText) {\n        result.push(cell);\n      }\n    });\n  });\n\n  return result;\n};\n\nfunction randomCell(max) {\n  return Math.floor(Math.random() * max);\n};\n\nfunction addNewNumber(array) {\n  const emptyCells = findEmptyCell(array);\n  const position = randomCell(emptyCells.length);\n  let number = randomCell(10);\n\n  if (number <= 1) {\n    number = 4;\n  } else {\n    number = 2;\n  }\n\n  try {\n    emptyCells[position].innerText = number;\n    score.innerText = +score.innerText + +number;\n  } catch (error) {\n    document.removeEventListener('keydown', game);\n    showMessage('lose');\n  }\n};\n\nfunction getClearArray(arr = []) {\n  const result = [];\n\n  arr.forEach(el => {\n    if (el.innerText) {\n      result.push(el.innerText);\n    }\n  });\n\n  return result;\n};\n\nfunction cellClassHandler() {\n  cellList.forEach(el => {\n    while (el.classList.length > 0) {\n      el.classList.remove(el.classList.item(0));\n    }\n    el.classList.add(`field-cell`);\n\n    if (el.innerText) {\n      el.classList.add(`field-cell--${el.innerText}`);\n    }\n  });\n};\n\nfunction start() {\n  addNewNumber(rows);\n  addNewNumber(rows);\n  cellClassHandler();\n};\n\nfunction showMessage(type) {\n  const allMsg = document.querySelectorAll('.message');\n\n  if (!type) {\n    allMsg.forEach(el => el.classList.add('hidden'));\n\n    return;\n  }\n\n  const msg = document.querySelector(`.message-${type}`);\n\n  allMsg.forEach(el => el.classList.add('hidden'));\n  msg.classList.remove('hidden');\n};\n"]}